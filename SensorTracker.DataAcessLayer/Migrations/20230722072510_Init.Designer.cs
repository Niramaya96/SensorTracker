// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SensorTracker.DataAcessLayer;

#nullable disable

namespace SensorTracker.DataAcessLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230722072510_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SensorTracker.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SensorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SensorId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SensorTracker.Entities.Sensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Sensors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "С засыпкой",
                            Name = "K1",
                            Price = 52.0
                        },
                        new
                        {
                            Id = 2,
                            Description = "С засыпкой",
                            Name = "К1У",
                            Price = 52.0
                        },
                        new
                        {
                            Id = 3,
                            Description = "С засыпкой",
                            Name = "K2",
                            Price = 52.0
                        },
                        new
                        {
                            Id = 4,
                            Description = "С засыпкой",
                            Name = "K2.1",
                            Price = 52.0
                        },
                        new
                        {
                            Id = 5,
                            Description = "С засыпкой",
                            Name = "K3",
                            Price = 52.0
                        },
                        new
                        {
                            Id = 6,
                            Description = "С засыпкой",
                            Name = "K4",
                            Price = 52.0
                        },
                        new
                        {
                            Id = 7,
                            Description = "С засыпкой",
                            Name = "K5",
                            Price = 52.0
                        },
                        new
                        {
                            Id = 8,
                            Description = "С засыпкой",
                            Name = "К1И",
                            Price = 52.0
                        },
                        new
                        {
                            Id = 9,
                            Description = "С клеемной головкой",
                            Name = "Кл1-1",
                            Price = 52.0
                        },
                        new
                        {
                            Id = 10,
                            Description = "С клеемной головкой",
                            Name = "Кл1-2",
                            Price = 52.0
                        },
                        new
                        {
                            Id = 11,
                            Description = "С клеемной головкой",
                            Name = "Кл1-3",
                            Price = 52.0
                        },
                        new
                        {
                            Id = 12,
                            Description = "С клеемной головкой",
                            Name = "Кл4-1",
                            Price = 52.0
                        },
                        new
                        {
                            Id = 13,
                            Description = "С клеемной головкой",
                            Name = "Кл2-2",
                            Price = 58.0
                        },
                        new
                        {
                            Id = 14,
                            Description = "С клеемной головкой",
                            Name = "Кл3-1",
                            Price = 48.0
                        },
                        new
                        {
                            Id = 15,
                            Description = "С клеемной головкой",
                            Name = "Кл1-3",
                            Price = 52.0
                        },
                        new
                        {
                            Id = 17,
                            Description = "Другие",
                            Name = "Рт-3",
                            Price = 52.0
                        },
                        new
                        {
                            Id = 18,
                            Description = "Другие",
                            Name = "Рт-4",
                            Price = 52.0
                        },
                        new
                        {
                            Id = 19,
                            Description = "Другие",
                            Name = "Рт-5",
                            Price = 52.0
                        },
                        new
                        {
                            Id = 20,
                            Description = "Другие",
                            Name = "It-7",
                            Price = 37.0
                        });
                });

            modelBuilder.Entity("SensorTracker.Entities.Order", b =>
                {
                    b.HasOne("SensorTracker.Entities.Sensor", "Sensor")
                        .WithMany()
                        .HasForeignKey("SensorId");

                    b.Navigation("Sensor");
                });
#pragma warning restore 612, 618
        }
    }
}
